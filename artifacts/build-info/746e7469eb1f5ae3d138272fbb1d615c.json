{
	"id": "746e7469eb1f5ae3d138272fbb1d615c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PBMLogic.sol": {
				"content": "// File: PBMLogic.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./IPBMAddressList.sol\";\n\nabstract contract PBMLogic is IPBMAddressList {\n    address public owner;\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(owner == msg.sender, \"PBM: caller is not the owner\");\n        _;\n    }\n\n    function transferPreCheck(\n        address _from,\n        address _to,\n        uint256 _tokenId\n    ) external view virtual returns (bool) {\n        return true;\n    }\n\n    function unwrapPreCheck(\n        address _unwrapper,\n        uint256 _tokenId,\n        uint256 _valueDate // Can be used for time-based logic, e.g. settlement date\n    ) external view virtual returns (bool) {\n        return true;\n    }\n}"
			},
			"contracts/IPBMAddressList.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n/// @title PBM Address list Interface. \n/// @notice The PBM address list stores and manages whitelisted merchants/redeemers and blacklisted address for the PBMs \ninterface IPBMAddressList {\n\n    /// @notice Checks if the address is one of the blacklisted addresses\n    /// @param account The address to query\n    /// @return bool_ True if address is blacklisted, else false\n    function isBlacklisted(address account) external returns (bool bool_) ; \n\n    /// @notice Checks if the address is one of the whitelisted merchant/redeemer addresses\n    /// @param account The address to query\n    /// @return bool_ True if the address is in merchant/redeemer whitelist and is NOT a blacklisted address, otherwise false.\n    function isMerchant(address account) external returns (bool bool_) ; \n\n    function isWhitelisted(address account) external returns (bool bool_) ; \n    \n    /// @notice Event emitted when the Merchant/Redeemer List is edited\n    /// @param action Tags \"add\" or \"remove\" for action type\n    /// @param addresses An array of merchant wallet addresses that was just added or removed from Merchant/Redeemer whitelist\n    /// @param metadata Optional comments or notes about the added or removed addresses.\n    event MerchantList(string action, address[] addresses, string metadata);\n    \n    /// @notice Event emitted when the Blacklist is edited\n    /// @param action Tags \"add\" or \"remove\" for action type\n    /// @param addresses An array of wallet addresses that was just added or removed from address blacklist\n    /// @param metadata Optional comments or notes about the added or removed addresses.\n    event Blacklist(string action, address[] addresses, string metadata);\n\n     event Whitelist(string action, address[] addresses, string metadata);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/IPBMAddressList.sol": {
				"IPBMAddressList": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "action",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "metadata",
									"type": "string"
								}
							],
							"name": "Blacklist",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "action",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "metadata",
									"type": "string"
								}
							],
							"name": "MerchantList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "action",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "metadata",
									"type": "string"
								}
							],
							"name": "Whitelist",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "bool_",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isMerchant",
							"outputs": [
								{
									"internalType": "bool",
									"name": "bool_",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "bool_",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Blacklist(string,address[],string)": {
								"params": {
									"action": "Tags \"add\" or \"remove\" for action type",
									"addresses": "An array of wallet addresses that was just added or removed from address blacklist",
									"metadata": "Optional comments or notes about the added or removed addresses."
								}
							},
							"MerchantList(string,address[],string)": {
								"params": {
									"action": "Tags \"add\" or \"remove\" for action type",
									"addresses": "An array of merchant wallet addresses that was just added or removed from Merchant/Redeemer whitelist",
									"metadata": "Optional comments or notes about the added or removed addresses."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"isBlacklisted(address)": {
								"params": {
									"account": "The address to query"
								},
								"returns": {
									"bool_": "True if address is blacklisted, else false"
								}
							},
							"isMerchant(address)": {
								"params": {
									"account": "The address to query"
								},
								"returns": {
									"bool_": "True if the address is in merchant/redeemer whitelist and is NOT a blacklisted address, otherwise false."
								}
							}
						},
						"title": "PBM Address list Interface. ",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isBlacklisted(address)": "fe575a87",
							"isMerchant(address)": "1a2f7167",
							"isWhitelisted(address)": "3af32abf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"action\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"Blacklist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"action\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"MerchantList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"action\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"Whitelist\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"bool_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMerchant\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"bool_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"bool_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Blacklist(string,address[],string)\":{\"params\":{\"action\":\"Tags \\\"add\\\" or \\\"remove\\\" for action type\",\"addresses\":\"An array of wallet addresses that was just added or removed from address blacklist\",\"metadata\":\"Optional comments or notes about the added or removed addresses.\"}},\"MerchantList(string,address[],string)\":{\"params\":{\"action\":\"Tags \\\"add\\\" or \\\"remove\\\" for action type\",\"addresses\":\"An array of merchant wallet addresses that was just added or removed from Merchant/Redeemer whitelist\",\"metadata\":\"Optional comments or notes about the added or removed addresses.\"}}},\"kind\":\"dev\",\"methods\":{\"isBlacklisted(address)\":{\"params\":{\"account\":\"The address to query\"},\"returns\":{\"bool_\":\"True if address is blacklisted, else false\"}},\"isMerchant(address)\":{\"params\":{\"account\":\"The address to query\"},\"returns\":{\"bool_\":\"True if the address is in merchant/redeemer whitelist and is NOT a blacklisted address, otherwise false.\"}}},\"title\":\"PBM Address list Interface. \",\"version\":1},\"userdoc\":{\"events\":{\"Blacklist(string,address[],string)\":{\"notice\":\"Event emitted when the Blacklist is edited\"},\"MerchantList(string,address[],string)\":{\"notice\":\"Event emitted when the Merchant/Redeemer List is edited\"}},\"kind\":\"user\",\"methods\":{\"isBlacklisted(address)\":{\"notice\":\"Checks if the address is one of the blacklisted addresses\"},\"isMerchant(address)\":{\"notice\":\"Checks if the address is one of the whitelisted merchant/redeemer addresses\"}},\"notice\":\"The PBM address list stores and manages whitelisted merchants/redeemers and blacklisted address for the PBMs \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IPBMAddressList.sol\":\"IPBMAddressList\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IPBMAddressList.sol\":{\"keccak256\":\"0x07c0840e052f62a4be06a2e4bd55cdf2b883abe649fc7402b03a7f0d34d534cb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b6ff08bec076f7a1927cdf6e062ac9a76fcb8c06ff7c172974e631714e72533b\",\"dweb:/ipfs/QmezcPURepQyvXMYh3JPSLe94ZMD4PP71yubDcxERy4vni\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Blacklist(string,address[],string)": {
								"notice": "Event emitted when the Blacklist is edited"
							},
							"MerchantList(string,address[],string)": {
								"notice": "Event emitted when the Merchant/Redeemer List is edited"
							}
						},
						"kind": "user",
						"methods": {
							"isBlacklisted(address)": {
								"notice": "Checks if the address is one of the blacklisted addresses"
							},
							"isMerchant(address)": {
								"notice": "Checks if the address is one of the whitelisted merchant/redeemer addresses"
							}
						},
						"notice": "The PBM address list stores and manages whitelisted merchants/redeemers and blacklisted address for the PBMs ",
						"version": 1
					}
				}
			},
			"contracts/PBMLogic.sol": {
				"PBMLogic": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "action",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "metadata",
									"type": "string"
								}
							],
							"name": "Blacklist",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "action",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "metadata",
									"type": "string"
								}
							],
							"name": "MerchantList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "action",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "metadata",
									"type": "string"
								}
							],
							"name": "Whitelist",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "bool_",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isMerchant",
							"outputs": [
								{
									"internalType": "bool",
									"name": "bool_",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "bool_",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferPreCheck",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_unwrapper",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_valueDate",
									"type": "uint256"
								}
							],
							"name": "unwrapPreCheck",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Blacklist(string,address[],string)": {
								"params": {
									"action": "Tags \"add\" or \"remove\" for action type",
									"addresses": "An array of wallet addresses that was just added or removed from address blacklist",
									"metadata": "Optional comments or notes about the added or removed addresses."
								}
							},
							"MerchantList(string,address[],string)": {
								"params": {
									"action": "Tags \"add\" or \"remove\" for action type",
									"addresses": "An array of merchant wallet addresses that was just added or removed from Merchant/Redeemer whitelist",
									"metadata": "Optional comments or notes about the added or removed addresses."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"isBlacklisted(address)": {
								"params": {
									"account": "The address to query"
								},
								"returns": {
									"bool_": "True if address is blacklisted, else false"
								}
							},
							"isMerchant(address)": {
								"params": {
									"account": "The address to query"
								},
								"returns": {
									"bool_": "True if the address is in merchant/redeemer whitelist and is NOT a blacklisted address, otherwise false."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isBlacklisted(address)": "fe575a87",
							"isMerchant(address)": "1a2f7167",
							"isWhitelisted(address)": "3af32abf",
							"owner()": "8da5cb5b",
							"transferPreCheck(address,address,uint256)": "c925e1d7",
							"unwrapPreCheck(address,uint256,uint256)": "6d2b885d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"action\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"Blacklist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"action\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"MerchantList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"action\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"Whitelist\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"bool_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMerchant\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"bool_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"bool_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferPreCheck\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_unwrapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_valueDate\",\"type\":\"uint256\"}],\"name\":\"unwrapPreCheck\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Blacklist(string,address[],string)\":{\"params\":{\"action\":\"Tags \\\"add\\\" or \\\"remove\\\" for action type\",\"addresses\":\"An array of wallet addresses that was just added or removed from address blacklist\",\"metadata\":\"Optional comments or notes about the added or removed addresses.\"}},\"MerchantList(string,address[],string)\":{\"params\":{\"action\":\"Tags \\\"add\\\" or \\\"remove\\\" for action type\",\"addresses\":\"An array of merchant wallet addresses that was just added or removed from Merchant/Redeemer whitelist\",\"metadata\":\"Optional comments or notes about the added or removed addresses.\"}}},\"kind\":\"dev\",\"methods\":{\"isBlacklisted(address)\":{\"params\":{\"account\":\"The address to query\"},\"returns\":{\"bool_\":\"True if address is blacklisted, else false\"}},\"isMerchant(address)\":{\"params\":{\"account\":\"The address to query\"},\"returns\":{\"bool_\":\"True if the address is in merchant/redeemer whitelist and is NOT a blacklisted address, otherwise false.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Blacklist(string,address[],string)\":{\"notice\":\"Event emitted when the Blacklist is edited\"},\"MerchantList(string,address[],string)\":{\"notice\":\"Event emitted when the Merchant/Redeemer List is edited\"}},\"kind\":\"user\",\"methods\":{\"isBlacklisted(address)\":{\"notice\":\"Checks if the address is one of the blacklisted addresses\"},\"isMerchant(address)\":{\"notice\":\"Checks if the address is one of the whitelisted merchant/redeemer addresses\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PBMLogic.sol\":\"PBMLogic\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IPBMAddressList.sol\":{\"keccak256\":\"0x07c0840e052f62a4be06a2e4bd55cdf2b883abe649fc7402b03a7f0d34d534cb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b6ff08bec076f7a1927cdf6e062ac9a76fcb8c06ff7c172974e631714e72533b\",\"dweb:/ipfs/QmezcPURepQyvXMYh3JPSLe94ZMD4PP71yubDcxERy4vni\"]},\"contracts/PBMLogic.sol\":{\"keccak256\":\"0x83f29a6fefd311dd0ab2c72a02613b0f3b3b42cdd7bf436c7a5d2dd99cf22853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ec04bcbd32cc8c3eb0bc1fd7de3660fffa21e12279157573f59790c6ce2042d\",\"dweb:/ipfs/QmP4JyizYQsnsnBJDJP3Jckm1goVAWAYDShSYs6gas3yLu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 62,
								"contract": "contracts/PBMLogic.sol:PBMLogic",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"events": {
							"Blacklist(string,address[],string)": {
								"notice": "Event emitted when the Blacklist is edited"
							},
							"MerchantList(string,address[],string)": {
								"notice": "Event emitted when the Merchant/Redeemer List is edited"
							}
						},
						"kind": "user",
						"methods": {
							"isBlacklisted(address)": {
								"notice": "Checks if the address is one of the blacklisted addresses"
							},
							"isMerchant(address)": {
								"notice": "Checks if the address is one of the whitelisted merchant/redeemer addresses"
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/PBMLogic.sol:20:9:\n   |\n20 |         address _from,\n   |         ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 409,
					"file": "contracts/PBMLogic.sol",
					"start": 396
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/PBMLogic.sol:21:9:\n   |\n21 |         address _to,\n   |         ^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 430,
					"file": "contracts/PBMLogic.sol",
					"start": 419
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/PBMLogic.sol:22:9:\n   |\n22 |         uint256 _tokenId\n   |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 456,
					"file": "contracts/PBMLogic.sol",
					"start": 440
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/PBMLogic.sol:28:9:\n   |\n28 |         address _unwrapper,\n   |         ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 585,
					"file": "contracts/PBMLogic.sol",
					"start": 567
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/PBMLogic.sol:29:9:\n   |\n29 |         uint256 _tokenId,\n   |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 611,
					"file": "contracts/PBMLogic.sol",
					"start": 595
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/PBMLogic.sol:30:9:\n   |\n30 |         uint256 _valueDate // Can be used for time-based logic, e.g. settlement date\n   |         ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 639,
					"file": "contracts/PBMLogic.sol",
					"start": 621
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/IPBMAddressList.sol": {
				"ast": {
					"absolutePath": "contracts/IPBMAddressList.sol",
					"exportedSymbols": {
						"IPBMAddressList": [
							55
						]
					},
					"id": 56,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPBMAddressList",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "70:162:0",
								"text": "@title PBM Address list Interface. \n @notice The PBM address list stores and manages whitelisted merchants/redeemers and blacklisted address for the PBMs "
							},
							"fullyImplemented": false,
							"id": 55,
							"linearizedBaseContracts": [
								55
							],
							"name": "IPBMAddressList",
							"nameLocation": "242:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "265:178:0",
										"text": "@notice Checks if the address is one of the blacklisted addresses\n @param account The address to query\n @return bool_ True if address is blacklisted, else false"
									},
									"functionSelector": "fe575a87",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isBlacklisted",
									"nameLocation": "457:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "479:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "471:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "bool_",
												"nameLocation": "511:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "506:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "506:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "505:12:0"
									},
									"scope": 55,
									"src": "448:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "526:258:0",
										"text": "@notice Checks if the address is one of the whitelisted merchant/redeemer addresses\n @param account The address to query\n @return bool_ True if the address is in merchant/redeemer whitelist and is NOT a blacklisted address, otherwise false."
									},
									"functionSelector": "1a2f7167",
									"id": 18,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isMerchant",
									"nameLocation": "798:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "817:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "809:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:17:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "bool_",
												"nameLocation": "849:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "844:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 15,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:12:0"
									},
									"scope": 55,
									"src": "789:68:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3af32abf",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelisted",
									"nameLocation": "873:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "895:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "887:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:17:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "bool_",
												"nameLocation": "927:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "922:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 22,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "922:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:12:0"
									},
									"scope": 55,
									"src": "864:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "946:344:0",
										"text": "@notice Event emitted when the Merchant/Redeemer List is edited\n @param action Tags \"add\" or \"remove\" for action type\n @param addresses An array of merchant wallet addresses that was just added or removed from Merchant/Redeemer whitelist\n @param metadata Optional comments or notes about the added or removed addresses."
									},
									"eventSelector": "255c7bb3f43b415fcde5cc3fd6b38794d983721f30b0a924ab3db736c38c4573",
									"id": 35,
									"name": "MerchantList",
									"nameLocation": "1301:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"mutability": "mutable",
												"name": "action",
												"nameLocation": "1321:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1314:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 27,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1314:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "addresses",
												"nameLocation": "1339:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1329:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 29,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1329:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 30,
													"nodeType": "ArrayTypeName",
													"src": "1329:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "1357:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1350:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 32,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1350:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1313:53:0"
									},
									"src": "1295:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1377:312:0",
										"text": "@notice Event emitted when the Blacklist is edited\n @param action Tags \"add\" or \"remove\" for action type\n @param addresses An array of wallet addresses that was just added or removed from address blacklist\n @param metadata Optional comments or notes about the added or removed addresses."
									},
									"eventSelector": "fd601646bc86d816d9448e5951578f6b37509d32182b7d514dac8c544bcde82a",
									"id": 45,
									"name": "Blacklist",
									"nameLocation": "1700:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"indexed": false,
												"mutability": "mutable",
												"name": "action",
												"nameLocation": "1717:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1710:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 37,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": false,
												"mutability": "mutable",
												"name": "addresses",
												"nameLocation": "1735:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1725:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 39,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1725:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 40,
													"nodeType": "ArrayTypeName",
													"src": "1725:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "1753:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1746:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 42,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1746:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1709:53:0"
									},
									"src": "1694:69:0"
								},
								{
									"anonymous": false,
									"eventSelector": "38ce3f622fc3fc49614c14ace1d6bcc50f6776e815be6acb3e2bc0ef93407463",
									"id": 54,
									"name": "Whitelist",
									"nameLocation": "1776:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"indexed": false,
												"mutability": "mutable",
												"name": "action",
												"nameLocation": "1793:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1786:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 46,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1786:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": false,
												"mutability": "mutable",
												"name": "addresses",
												"nameLocation": "1811:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1801:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 48,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1801:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 49,
													"nodeType": "ArrayTypeName",
													"src": "1801:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "1829:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1822:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 51,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1822:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1785:53:0"
									},
									"src": "1770:69:0"
								}
							],
							"scope": 56,
							"src": "232:1609:0",
							"usedErrors": [],
							"usedEvents": [
								35,
								45,
								54
							]
						}
					],
					"src": "45:1796:0"
				},
				"id": 0
			},
			"contracts/PBMLogic.sol": {
				"ast": {
					"absolutePath": "contracts/PBMLogic.sol",
					"exportedSymbols": {
						"IPBMAddressList": [
							55
						],
						"PBMLogic": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 57,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "54:23:1"
						},
						{
							"absolutePath": "contracts/IPBMAddressList.sol",
							"file": "./IPBMAddressList.sol",
							"id": 58,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 56,
							"src": "79:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 59,
										"name": "IPBMAddressList",
										"nameLocations": [
											"142:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 55,
										"src": "142:15:1"
									},
									"id": 60,
									"nodeType": "InheritanceSpecifier",
									"src": "142:15:1"
								}
							],
							"canonicalName": "PBMLogic",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								55
							],
							"name": "PBMLogic",
							"nameLocation": "130:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 62,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "179:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "164:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 61,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "164:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "205:35:1",
										"statements": [
											{
												"expression": {
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 65,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "215:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 66,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "223:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "227:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "223:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "215:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "215:18:1"
											}
										]
									},
									"id": 71,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "202:2:1"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "205:0:1"
									},
									"scope": 112,
									"src": "191:49:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "267:88:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "285:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 75,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "294:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "298:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "294:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "285:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50424d3a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "306:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93c6156e0821d5c8c1308b404595640692a822e844646cf684f09e70429d8750",
																"typeString": "literal_string \"PBM: caller is not the owner\""
															},
															"value": "PBM: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93c6156e0821d5c8c1308b404595640692a822e844646cf684f09e70429d8750",
																"typeString": "literal_string \"PBM: caller is not the owner\""
															}
														],
														"id": 73,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "277:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "277:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "277:60:1"
											},
											{
												"id": 81,
												"nodeType": "PlaceholderStatement",
												"src": "347:1:1"
											}
										]
									},
									"id": 83,
									"name": "onlyOwner",
									"nameLocation": "255:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "264:2:1"
									},
									"src": "246:109:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "500:28:1",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "517:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 93,
												"id": 95,
												"nodeType": "Return",
												"src": "510:11:1"
											}
										]
									},
									"functionSelector": "c925e1d7",
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferPreCheck",
									"nameLocation": "370:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "404:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "396:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "427:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "419:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "448:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "440:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "386:76:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "494:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 91,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "494:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:6:1"
									},
									"scope": 112,
									"src": "361:167:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "741:28:1",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 107,
												"id": 109,
												"nodeType": "Return",
												"src": "751:11:1"
											}
										]
									},
									"functionSelector": "6d2b885d",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unwrapPreCheck",
									"nameLocation": "543:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "_unwrapper",
												"nameLocation": "575:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "567:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "603:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "595:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "_valueDate",
												"nameLocation": "629:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "621:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "557:146:1"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "735:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 105,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "735:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "734:6:1"
									},
									"scope": 112,
									"src": "534:235:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 113,
							"src": "112:659:1",
							"usedErrors": [],
							"usedEvents": [
								35,
								45,
								54
							]
						}
					],
					"src": "54:717:1"
				},
				"id": 1
			}
		}
	}
}